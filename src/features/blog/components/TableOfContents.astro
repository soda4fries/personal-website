---
import { useTranslations, type LanguageCode } from '@/i18n/ui';
import { cn } from '@/lib/utils';

export type Props = {
  lang: LanguageCode;
  className?: string;
};

const { lang, className } = Astro.props;

const t = useTranslations(lang, 'toc');
const componentTitle = t('title');
---

<!-- Mobile TOC - appears at top on mobile -->
<div class="lg:hidden mb-8" id="mobile-toc">
  <details class="group">
    <summary class="flex items-center justify-between p-4 bg-card border border-border rounded-lg cursor-pointer hover:bg-accent transition-colors">
      <span class="font-semibold text-foreground">{componentTitle}</span>
      <svg class="w-5 h-5 transition-transform group-open:rotate-180" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
      </svg>
    </summary>
    <nav class="mt-4 p-4 bg-card border border-border rounded-lg" id="mobile-toc-content">
      <!-- TOC will be populated by JavaScript -->
    </nav>
  </details>
</div>

<!-- Desktop TOC - fixed sidebar on desktop -->
<div class="hidden lg:block fixed top-1/2 right-8 transform -translate-y-1/2 w-64 max-h-[70vh] overflow-y-auto" id="desktop-toc">
  <nav class="bg-card border border-border rounded-lg p-4 shadow-lg">
    <h3 class="font-semibold text-foreground mb-4">{componentTitle}</h3>
    <div id="desktop-toc-content">
      <!-- TOC will be populated by JavaScript -->
    </div>
  </nav>
</div>

<script>
  // Generate Table of Contents from document headings
  function generateTOC() {
    const headings = document.querySelectorAll('article h1, article h2, article h3, article h4, article h5, article h6');
    const mobileTocContent = document.getElementById('mobile-toc-content');
    const desktopTocContent = document.getElementById('desktop-toc-content');
    
    if (!headings.length || !mobileTocContent || !desktopTocContent) return;

    // Generate IDs for headings that don't have them
    headings.forEach((heading, index) => {
      if (!heading.id) {
        const text = heading.textContent || '';
        const id = text.toLowerCase()
          .replace(/[^\w\s-]/g, '')
          .replace(/\s+/g, '-')
          .replace(/-+/g, '-')
          .trim()
          || `heading-${index}`;
        heading.id = id;
      }
    });

    // Build TOC HTML
    let tocHtml = '<ul class="space-y-2">';
    
    headings.forEach((heading) => {
      const level = parseInt(heading.tagName.substring(1));
      const text = heading.textContent || '';
      const id = heading.id;
      
      const indent = (level - 1) * 12; // 12px per level
      tocHtml += `
        <li style="margin-left: ${indent}px">
          <a href="#${id}" 
             class="toc-link block py-1 px-2 text-sm text-muted-foreground hover:text-foreground hover:bg-accent rounded transition-colors"
             data-level="${level}">
            ${text}
          </a>
        </li>
      `;
    });
    
    tocHtml += '</ul>';
    
    // Insert into both mobile and desktop TOC
    mobileTocContent.innerHTML = tocHtml;
    desktopTocContent.innerHTML = tocHtml;

    // Setup scroll highlighting
    setupScrollHighlighting(headings);
  }

  // Highlight current section based on scroll position
  function setupScrollHighlighting(headings) {
    const tocLinks = document.querySelectorAll('.toc-link');
    
    function highlightCurrentSection() {
      let current = '';
      const scrollPosition = window.scrollY + 100; // Offset for better UX
      
      for (let i = headings.length - 1; i >= 0; i--) {
        const heading = headings[i];
        if (heading.offsetTop <= scrollPosition) {
          current = heading.id;
          break;
        }
      }
      
      // Remove active class from all links
      tocLinks.forEach(link => {
        link.classList.remove('bg-primary', 'text-primary-foreground');
        link.classList.add('text-muted-foreground');
      });
      
      // Add active class to current link
      if (current) {
        const activeLinks = document.querySelectorAll(`a[href="#${current}"]`);
        activeLinks.forEach(link => {
          if (link.classList.contains('toc-link')) {
            link.classList.remove('text-muted-foreground');
            link.classList.add('bg-primary', 'text-primary-foreground');
          }
        });
      }
    }
    
    // Initial highlight
    highlightCurrentSection();
    
    // Highlight on scroll
    let ticking = false;
    window.addEventListener('scroll', () => {
      if (!ticking) {
        requestAnimationFrame(() => {
          highlightCurrentSection();
          ticking = false;
        });
        ticking = true;
      }
    });

    // Smooth scroll on TOC link click
    tocLinks.forEach(link => {
      link.addEventListener('click', (e) => {
        e.preventDefault();
        const targetId = link.getAttribute('href')?.substring(1);
        const target = targetId ? document.getElementById(targetId) : null;
        if (target) {
          target.scrollIntoView({ behavior: 'smooth', block: 'start' });
          // Close mobile TOC on mobile after clicking
          if (window.innerWidth < 1024) {
            const details = document.querySelector('#mobile-toc details');
            if (details) details.open = false;
          }
        }
      });
    });
  }

  // Generate TOC when DOM is ready
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', generateTOC);
  } else {
    generateTOC();
  }

  // Hide desktop TOC if no headings found
  window.addEventListener('load', () => {
    const headings = document.querySelectorAll('article h1, article h2, article h3, article h4, article h5, article h6');
    if (!headings.length) {
      const mobileToc = document.getElementById('mobile-toc');
      const desktopToc = document.getElementById('desktop-toc');
      if (mobileToc) mobileToc.style.display = 'none';
      if (desktopToc) desktopToc.style.display = 'none';
    }
  });
</script>

<style>
  /* Ensure desktop TOC doesn't interfere with content */
  @media (min-width: 1024px) {
    #desktop-toc {
      z-index: 40;
    }
    
    /* Add right margin to main content to avoid overlap with TOC */
    article {
      margin-right: 280px;
    }
  }
  
  /* Smooth scrolling for the entire page */
  html {
    scroll-behavior: smooth;
  }
  
  /* Custom scrollbar for TOC */
  #desktop-toc nav {
    scrollbar-width: thin;
    scrollbar-color: hsl(var(--muted)) transparent;
  }
  
  #desktop-toc nav::-webkit-scrollbar {
    width: 6px;
  }
  
  #desktop-toc nav::-webkit-scrollbar-track {
    background: transparent;
  }
  
  #desktop-toc nav::-webkit-scrollbar-thumb {
    background-color: hsl(var(--muted));
    border-radius: 3px;
  }
</style>

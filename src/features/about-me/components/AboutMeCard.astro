---
import { Badge } from '@/components/ui/badge';
import {
  Card,
  CardContent,
  CardDescription,
  CardHeader,
  CardTitle,
} from '@/components/ui/card';
import { useTranslations, type LanguageCode } from '@/i18n/ui';
import { formatDate } from '@/lib/utils';

import type { CollectionEntry } from 'astro:content';
import { getRelativeLocaleUrl } from 'astro:i18n';
import { Calendar, ChevronRight } from 'lucide-react';

interface Props {
  content: CollectionEntry<'about-me'>;
  lang: LanguageCode;
}

const { content, lang } = Astro.props;
const t = useTranslations(lang, 'aboutMePage');
---

<a href={getRelativeLocaleUrl(lang, `/about-me/${content.id}/`)} class="group block rounded-xl border border-border/50 bg-card text-card-foreground shadow-sm transition-all duration-300 hover:shadow-lg hover:border-primary/20 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 overflow-hidden h-full">
  <Card
    className="group bg-transparent border-none transition-none shadow-none grid grid-rows-subgrid row-span-2 h-full relative"
  >
    <!-- Badge ABOUT ME -->
    <div class="absolute top-4 right-4 z-10">
      <Badge variant="outline">ðŸ‘¤ ABOUT</Badge>
    </div>
    <CardHeader className="row-span-1 pb-4 flex flex-col justify-between">
      <CardTitle
        className="text-xl font-semibold group-hover:text-primary transition-colors pr-12"
      >
        {content.data.title}
      </CardTitle>

      <div class="flex items-center gap-3 text-xs text-muted-foreground pt-2">
        <div class="flex items-center gap-1">
          <Calendar className="size-4" />
          <time datetime={content.data.pubDate.toISOString()}>
            {formatDate(content.data.pubDate, lang)}
          </time>
        </div>
        {
          content.data.tags && content.data.tags.length > 0 && (
            <>
              <span class="w-1 h-1 bg-muted-foreground rounded-full" />
              <Badge variant={'outline'}>
                {content.data.tags[0].charAt(0).toUpperCase() +
                  content.data.tags[0].slice(1)}
              </Badge>
            </>
          )
        }
      </div>
    </CardHeader>

    <CardContent className="row-span-1">
      <CardDescription
        className="mb-4 text-sm text-foreground/80 line-clamp-3 leading-relaxed"
      >
        {content.data.description}
      </CardDescription>

      <div
        class="flex items-center justify-between w-full border-t border-border/50 pt-4"
      >
        <div
          class="flex items-center text-sm font-medium text-primary transition-colors group-hover:text-primary/80"
        >
          {t('readMore')}
          <ChevronRight
            className="ml-1 size-4 transition-transform group-hover:translate-x-0.5"
          />
        </div>

        {/* category */}
        {
          content.data.category ? (
            <Badge variant={'secondary'}>{content.data.category}</Badge>
          ) : null
        }
      </div>
    </CardContent>

    <!-- Effect hover  -->
    <div
      class="absolute inset-0 bg-gradient-to-br from-primary/5 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300 pointer-events-none rounded-xl"
    >
    </div>
  </Card>
</a>